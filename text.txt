there is no constant time algorithm to generate the next prime number; this is why most libraries require an upper bound. this is actually a huge problem that needed to be solved for digital cryptography. rsa chooses sufficiently large primes by selecting a random number and testing for primality until it finds a prime.</br>given an arbitrary integer n, the only way to find the next prime after n is to iterate through n+1 to the unknown prime p testing for primality.</br>testing for primality is very cheap, and there are python libraries that do so: aks primes algorithm in python</br>given a function test_prime, than an infinite primes iterator will look something lik